# Nexus Trade AI - Production Kubernetes Deployment
# Enterprise-grade infrastructure for financial services

apiVersion: v1
kind: Namespace
metadata:
  name: nexus-trade-ai
  labels:
    environment: production
    compliance: financial-services

---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nexus-config
  namespace: nexus-trade-ai
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  API_VERSION: "v1"
  RATE_LIMIT_ENABLED: "true"
  MONITORING_ENABLED: "true"
  COMPLIANCE_MODE: "strict"
  
---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: nexus-secrets
  namespace: nexus-trade-ai
type: Opaque
data:
  # Base64 encoded secrets (replace with actual values)
  REDIS_URL: cmVkaXM6Ly9yZWRpcy1jbHVzdGVyOjYzNzk=
  DATABASE_URL: cG9zdGdyZXNxbDovL3VzZXI6cGFzc0BkYi5leGFtcGxlLmNvbTo1NDMyL25leHVz
  ALPACA_KEY: YWxwYWNhX2tleV9leGFtcGxl
  ALPACA_SECRET: YWxwYWNhX3NlY3JldF9leGFtcGxl
  JWT_SECRET: and0X3NlY3JldF9leGFtcGxl

---
# Nexus Alpha Trading Algorithm Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus-alpha-algorithm
  namespace: nexus-trade-ai
  labels:
    app: nexus-alpha
    tier: algorithm
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: nexus-alpha
  template:
    metadata:
      labels:
        app: nexus-alpha
        tier: algorithm
    spec:
      containers:
      - name: nexus-alpha
        image: nexustrade/nexus-alpha:2.0.0
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: nexus-config
              key: NODE_ENV
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: nexus-secrets
              key: REDIS_URL
        - name: ALPACA_KEY
          valueFrom:
            secretKeyRef:
              name: nexus-secrets
              key: ALPACA_KEY
        - name: ALPACA_SECRET
          valueFrom:
            secretKeyRef:
              name: nexus-secrets
              key: ALPACA_SECRET
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5

---
# API Platform Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus-api-platform
  namespace: nexus-trade-ai
  labels:
    app: nexus-api
    tier: api
spec:
  replicas: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 2
  selector:
    matchLabels:
      app: nexus-api
  template:
    metadata:
      labels:
        app: nexus-api
        tier: api
    spec:
      containers:
      - name: nexus-api
        image: nexustrade/nexus-api:2.0.0
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: nexus-config
              key: NODE_ENV
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: nexus-secrets
              key: REDIS_URL
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: nexus-secrets
              key: DATABASE_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: nexus-secrets
              key: JWT_SECRET
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5

---
# Market Data Engine Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus-market-data
  namespace: nexus-trade-ai
  labels:
    app: nexus-market-data
    tier: data
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nexus-market-data
  template:
    metadata:
      labels:
        app: nexus-market-data
        tier: data
    spec:
      containers:
      - name: market-data-engine
        image: nexustrade/market-data:2.0.0
        ports:
        - containerPort: 3002
        env:
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: nexus-secrets
              key: REDIS_URL
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"

---
# Redis Cluster for high-performance caching
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: nexus-trade-ai
spec:
  serviceName: redis-cluster
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        - containerPort: 16379
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 100Gi

---
# Load Balancer Service for API
apiVersion: v1
kind: Service
metadata:
  name: nexus-api-service
  namespace: nexus-trade-ai
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:123456789:certificate/cert-id"
spec:
  type: LoadBalancer
  ports:
  - port: 443
    targetPort: 3000
    protocol: TCP
    name: https
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: nexus-api

---
# Horizontal Pod Autoscaler for API
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nexus-api-hpa
  namespace: nexus-trade-ai
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nexus-api-platform
  minReplicas: 10
  maxReplicas: 100
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nexus-network-policy
  namespace: nexus-trade-ai
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: nexus-trade-ai
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 3001
    - protocol: TCP
      port: 3002
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 5432

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nexus-api-pdb
  namespace: nexus-trade-ai
spec:
  minAvailable: 5
  selector:
    matchLabels:
      app: nexus-api

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nexus-ingress
  namespace: nexus-trade-ai
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.nexustrade.ai
    - app.nexustrade.ai
    secretName: nexus-tls
  rules:
  - host: api.nexustrade.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nexus-api-service
            port:
              number: 80
